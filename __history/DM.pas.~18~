unit DM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.UI.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.FMXUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Comp.DataSet, FireDAC.Phys.MSAcc,
  FireDAC.Phys.MSAccDef, Data.Win.ADODB, FireDAC.Phys.ODBCDef,
  FireDAC.Phys.ODBCBase, FireDAC.Phys.ODBC;

type
  TDataModule1 = class(TDataModule)
    FDQuery1: TFDQuery;
    FDConnection1: TFDConnection;
    table_records: TFDTable;
    table_users: TFDTable;
    table_tickets: TFDTable;
    table_patients: TFDTable;
    FDConnection2: TFDConnection;
    qry_patients: TFDQuery;
    procedure FDConnection1BeforeConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}

procedure TDataModule1.FDConnection1BeforeConnect(Sender: TObject);

var
  AppPath :string;
begin
    try
      AppPath := ExtractFilePath(ParamStr(0));
      ShowMessage('Application Path: ' + AppPath);

      // Set other properties as needed
      DM.DataModule1.FDConnection1.Params.Database := AppPath+'\db.mdb';
      DM.DataModule1.FDConnection1.Params.UserName := '';
      DM.DataModule1.FDConnection1.Params.Password := '';

      // Connect to the database
      DM.DataModule1.FDConnection1.Open;

      if DM.DataModule1.FDConnection1.Connected then
        DM.DataModule1.FDConnection1.Connected := true
      else
        ShowMessage('Failed to connect to database.');

    finally
      DM.DataModule1.FDConnection1.Free;
    end;

end;

end.
